<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="popSQL">
	<!-- <insert id="imgWrite" parameterType="img">
		insert into img values(img_seq.nextval, #{img_name}, #{img_path}, nadri_seq.nextval)
	</insert>
	
	<insert id="nadriWrite" parameterType="int">
		insert into nadri values(nadri_seq.nextval, 2, #{seq})
	</insert>
	
	<insert id="popWrite" parameterType="tripPop">
		insert into tripPop values(pop_seq.nextval, #{pop_name}, #{pop_businessTime}, #{pop_tourismTime}, #{pop_call}, nadri_seq.currval)
	</insert>
	
	<insert id="popMap" parameterType="tripPopMap">
		insert into tripPopMap values(pop_seq.currval, #{map_x}, #{map_y})
	</insert> -->
	
	<select id="getLocation" parameterType="int" resultType="popLocation">
		select * from trippop
		join trippopmap using (pop_seq)
		where pop_seq = #{pop_seq}
	</select>
	
	<select id="getPopImg" parameterType="int" resultType="popImg">
		select img_seq, img_name, img_path 
		from img
		where seq=#{pop_seq}
	</select>
	
	<insert id="popReviewImgWrite" parameterType="popImg">
		insert into img values(img_seq.nextval, #{img_name}, #{img_path}, #{content_seq}, pop_review_seq.currval, #{main_seq}, #{mainImg})
	</insert>
	
	<insert id="popReviewWrite" parameterType="popReview">
		insert into trippop_review values(#{member_seq}, #{pop_review_content}, pop_review_seq.nextval, #{pop_review_score}, sysdate, #{pop_seq}, #{main_seq})
	</insert>
	
	<select id="getCountView" resultType="popCount">
		<!-- total_review, total_photo, avg_score -->
		select * from
		(select * from
		(select nvl(count(pop_review_seq),0) as total_review, nvl(sum(count_photo),0) as total_photo, nvl(avg(pop_review_score),0) as avg_score  
		from (select count(img_name) as count_photo, seq as pop_review_seq 
		from img where content_seq=3 and img_path='review' group by seq) join trippop_review
		using(pop_review_seq)) cross join 
		<!-- 4점이상 review, total_positiveReivew -->
		(select nvl(count(*),0) as total_positiveReview
		from (select count(img_name) as count_photo, seq as pop_review_seq 
		from img where content_seq=3 and img_path='review' group by seq) join trippop_review
		using(pop_review_seq)
		<![CDATA[
		where pop_review_score >=3)) cross join 
		]]>
		<!-- 2점이하 total_negativeReview -->
		(select nvl(count(*),0) as total_negativeReview
		from (select count(img_name) as count_photo, seq as pop_review_seq 
		from img where content_seq=3 and img_path='review' group by seq) join trippop_review
		using(pop_review_seq)
		<![CDATA[
		where pop_review_score <=2)
		]]>
	</select>
	
</mapper>